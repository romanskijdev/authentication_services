#!/bin/bash

set -e
trap 'echo "üî¥ –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"; exit' SIGINT

# –ò–º—è —Å–µ—Ç–∏ Docker
DOCKER_NETWORK_NAME="networklocal1"
# –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
SERVICE_NAME="demo_notifications_service"

# –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
IMAGE_NAME="${SERVICE_NAME}_i"
# –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
CONTAINER_NAME="${SERVICE_NAME}_c"
# –ò–º—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
APP_NAME="${SERVICE_NAME}_app"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
    docker stop $CONTAINER_NAME
    docker rm $CONTAINER_NAME
fi

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–∑, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ "$(docker images -q $IMAGE_NAME)" ]; then
    docker rmi $IMAGE_NAME
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é vendor —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
go mod tidy
rm -rf vendor
go mod vendor

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏ –∏ —Å–æ–∑–¥–∞–µ–º, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
docker network ls | grep $DOCKER_NETWORK_NAME || docker network create $DOCKER_NETWORK_NAME

# –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
docker build --build-arg APP_NAME=$APP_NAME -t $IMAGE_NAME .

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –Ω–æ–≤—ã–º –æ–±—Ä–∞–∑–æ–º –≤ —Å–µ—Ç–µ–≤–æ–º —Ä–µ–∂–∏–º–µ host –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º –∫ —Å–µ—Ç–∏ –ø–æ –∏–º–µ–Ω–∏
docker run -d \
    --network $DOCKER_NETWORK_NAME \
    --restart always \
    --name $CONTAINER_NAME \
    --add-host=database_host:192.168.0.15 \
    -e APP_NAME=$APP_NAME \
    $IMAGE_NAME